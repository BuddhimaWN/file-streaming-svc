trigger:
  branches:
    include:
      - main
 
variables:
  acrName: 'filestreamingcontainerregistry'                           # ACR name without .azurecr.io
  acrLoginServer: 'filestreamingcontainerregistry.azurecr.io'        # ACR login server
  imageName: 'filestreamingapp'               # Docker image name
  buildVersion: '$(Build.BuildId)'          # Versioned tag
  dockerComposeFile: 'docker-compose.yml'   # Compose file used on the VM
  containerRegistry: 'filestreamingcontainerregistry'                # Azure Container Registry service connection name
 
stages:
- stage: Build
  displayName: 'Build and Push Docker Image'
  jobs:
    - job: Build1
      displayName: 'Build and Push'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: Docker@2
          inputs:
            command: buildAndPush
            repository: $(acrLoginServer)/$(imageName)
            dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
            containerRegistry: $(containerRegistry)
            tags: |
              $(buildVersion)
              latest
          displayName: 'Build and Push Docker ACR service'
 
        - task: Docker@2
          inputs:
            command: tag
            repository: $(acrLoginServer)/$(imageName)
            tags: |
              $(buildVersion)
              latest
            containerRegistry: $(containerRegistry)
          displayName: 'Tag Docker Image'
 
        - task: CopyFilesOverSSH@0
          inputs:
            sourcePath: '$(dockerComposeFile)'
            contents: |
              $(dockerComposeFile)
            targetPath: '/home/$(Agent.UserName)'
            sshEndpoint: 'file-streaming-vm-v4'
          displayName: 'Copy docker-compose.yml to Deployment Server'
 
- stage: Deploy
  displayName: 'Deploy to VM with docker-compose'
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: DeployToVM
      environment:
        name: file-streaming-vm-v4            # Azure DevOps environment with registered VM
        resourceType: VirtualMachine
      strategy:
        runOnce:
          deploy:
            steps:
              - task: CopyFilesOverSSH@0
                inputs:
                  sourcePath: '$(dockerComposeFile)'
                  contents: |
                    $(dockerComposeFile)
                  targetPath: '/home/$(Agent.UserName)'
                  sshEndpoint: 'file-streaming-vm-v4'
                displayName: 'Copy docker-compose.yml to VM'
 
              - script: |
                  echo "Replacing image tag in docker-compose.yml..."
                  sed -i 's|$(acrLoginServer)/$(imageName):latest|$(acrLoginServer)/$(imageName):$(buildVersion)|' $(dockerComposeFile)
                displayName: 'Update docker-compose.yml with build version'
 
              - script: |
                  docker login $(acrLoginServer) -u $(ACR_USERNAME) -p $(ACR_PASSWORD)
                  docker-compose -f $(dockerComposeFile) down
                  docker-compose -f $(dockerComposeFile) pull
                  docker-compose -f $(dockerComposeFile) up -d
                displayName: 'Run docker-compose on VM'
                env:
                  ACR_USERNAME: $(ACR_USERNAME)
                  ACR_PASSWORD: $(ACR_PASSWORD)